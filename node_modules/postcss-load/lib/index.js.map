{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/*\n===============================================================================\n  PostCSS Load\n  Copyright 2016 Sebastian Software GmbH <https://www.sebastian-software.de>\n===============================================================================\n*/\n\nimport path from \"path\"\nimport process from \"process\"\n\nimport postcss from \"postcss\"\nimport pkgResolve from \"pkg-resolve\"\nimport read from \"read-cache\"\n\nimport parser_sugar from \"sugarss\"\nimport syntax_scss from \"postcss-scss\"\nimport syntax_less from \"postcss-less\"\n\nconst parserMap = {\n  \".sss\": parser_sugar\n}\n\nconst syntaxMap = {\n  \".scss\": syntax_scss,\n  \".less\": syntax_less\n}\n\nconst CWD = process.cwd()\n\nfunction parseStylesheet(filename, content, syntax=null, parser=null, plugins=null)\n{\n  var fileext = path.extname(filename)\n\n  if (syntax == null) {\n    syntax = syntaxMap[fileext]\n  }\n\n  if (parser == null) {\n    parser = parserMap[fileext]\n  }\n\n  var plugins = []\n  return postcss(plugins).process(content, {\n    from: filename,\n    syntax: syntax,\n    parser: parser\n  })\n}\n\nconst fileEncoding = \"utf-8\"\n\nconst loadPlugin = postcss.plugin(\"postcss-load\", (pluginOptions = {}) =>\n{\n  return function(css, result)\n  {\n    var promisesQueue = [];\n    var thisPath = path.relative(CWD, css.source.input.file);\n    var thisFolder = path.dirname(css.source.input.file)\n\n    css.walkAtRules(\"load\", (rule) =>\n    {\n      var params = postcss.list.space(rule.params)\n\n      if (params.length !== 1) {\n        throw rule.error(\"Invalid @load parameter number\", { plugin: \"postcss-load\" })\n      }\n\n      // Support params with and without quotes\n      try{\n        var includeFile = JSON.parse(params[0])\n      } catch(ex) {\n        var includeFile = params[0]\n      }\n\n      promisesQueue.push(new Promise(function(resolve, reject)\n      {\n        pkgResolve(includeFile, {basedir : thisFolder}).then(function(resolvedFile)\n        {\n          read(resolvedFile, fileEncoding).then(function(fileContent)\n          {\n            var parsed = parseStylesheet(resolvedFile, fileContent)\n\n            loadProcessor.process(parsed).then(function(processedChild)\n            {\n              // Copy over messages from parsed child document\n              if (processedChild.messages.length > 0) {\n                result.messages.push.apply(result.messages, processedChild.messages)\n              }\n\n              rule.replaceWith(processedChild.root)\n              resolve()\n            }).\n            catch(function(processIncludeError)\n            {\n              rule.warn(result, \"Unable to process included file! \" + processIncludeError)\n              resolve()\n            })\n          }).\n          catch(function(openIncludeError)\n          {\n            rule.warn(result, \"Unable to open included file! \" + openIncludeError)\n            resolve()\n          })\n        }).\n        catch(function(resolveIncludeError)\n        {\n          rule.warn(result, \"Unable to resolve include reference! \" + resolveIncludeError)\n          resolve()\n        })\n      }))\n    })\n\n    return Promise.all(promisesQueue)\n  }\n})\n\nvar loadProcessor = postcss([loadPlugin])\n\nexport default loadPlugin\n"]}